// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import UWP
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CMicrosoft_CUI_CIClosableNotifier: WindowsFoundation.IID {
    .init(Data1: 0x2989E93B, Data2: 0xED0F, Data3: 0x5E79, Data4: ( 0x90,0xF2,0xEA,0xC5,0x92,0xFC,0x6E,0x6A ))// 2989E93B-ED0F-5E79-90F2-EAC592FC6E6A
}

private var IID___x_ABI_CMicrosoft_CUI_CIColors: WindowsFoundation.IID {
    .init(Data1: 0x8CF15863, Data2: 0x8411, Data3: 0x5AFD, Data4: ( 0x94,0x6C,0x32,0x8E,0x04,0xDA,0x2F,0x2F ))// 8CF15863-8411-5AFD-946C-328E04DA2F2F
}

private var IID___x_ABI_CMicrosoft_CUI_CIColorsStatics: WindowsFoundation.IID {
    .init(Data1: 0x8620A5B0, Data2: 0x015A, Data3: 0x57AC, Data4: ( 0xA3,0xF3,0x89,0x5D,0x0B,0x12,0x69,0xAE ))// 8620A5B0-015A-57AC-A3F3-895D0B1269AE
}

private var IID___x_ABI_CMicrosoft_CUI_CIClosableNotifierHandler: WindowsFoundation.IID {
    .init(Data1: 0x478CEC68, Data2: 0xEA8E, Data3: 0x52FC, Data4: ( 0x87,0xE2,0xC8,0x19,0xDE,0x00,0x0F,0x92 ))// 478CEC68-EA8E-52FC-87E2-C819DE000F92
}

@_spi(WinRTInternal)
public enum __ABI_Microsoft_UI {
    public class IClosableNotifier: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIClosableNotifier }

        open func get_IsClosed() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsClosed(pThis, &value))
            }
            return .init(from: value)
        }

        open func add_Closed(_ handler: WinAppSDK.ClosableNotifierHandler?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = __ABI_Microsoft_UI.ClosableNotifierHandlerWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Closed(pThis, _handler, &token))
            }
            return token
        }

        open func remove_Closed(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Closed(pThis, token))
            }
        }

        open func add_FrameworkClosed(_ handler: WinAppSDK.ClosableNotifierHandler?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = __ABI_Microsoft_UI.ClosableNotifierHandlerWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_FrameworkClosed(pThis, _handler, &token))
            }
            return token
        }

        open func remove_FrameworkClosed(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_FrameworkClosed(pThis, token))
            }
        }

    }

    internal static var IClosableNotifierVTable: __x_ABI_CMicrosoft_CUI_CIClosableNotifierVtbl = .init(
        QueryInterface: { IClosableNotifierWrapper.queryInterface($0, $1, $2) },
        AddRef: { IClosableNotifierWrapper.addRef($0) },
        Release: { IClosableNotifierWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Microsoft_UI.IClosableNotifierWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Microsoft.UI.IClosableNotifier").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        get_IsClosed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.isClosed
            $1?.initialize(to: .init(from: value))
            return S_OK
        },

        add_Closed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            guard let handler = __ABI_Microsoft_UI.ClosableNotifierHandlerWrapper.unwrapFrom(abi: ComPtr($1)) else { return E_INVALIDARG }
            let token = __unwrapped__instance.closed.addHandler(handler)
            $2?.initialize(to: .from(swift: token))
            return S_OK
        },

        remove_Closed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let token: EventRegistrationToken = $1
            __unwrapped__instance.closed.removeHandler(token)
            return S_OK
        },

        add_FrameworkClosed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            guard let handler = __ABI_Microsoft_UI.ClosableNotifierHandlerWrapper.unwrapFrom(abi: ComPtr($1)) else { return E_INVALIDARG }
            let token = __unwrapped__instance.frameworkClosed.addHandler(handler)
            $2?.initialize(to: .from(swift: token))
            return S_OK
        },

        remove_FrameworkClosed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let token: EventRegistrationToken = $1
            __unwrapped__instance.frameworkClosed.removeHandler(token)
            return S_OK
        }
    )

    public typealias IClosableNotifierWrapper = InterfaceWrapperBase<__IMPL_Microsoft_UI.IClosableNotifierBridge>
    public class IColors: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIColors }

    }

    public class IColorsStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIColorsStatics }

        public func get_AliceBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AliceBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_AntiqueWhite() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AntiqueWhite(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Aqua() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Aqua(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Aquamarine() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Aquamarine(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Azure() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Azure(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Beige() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Beige(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Bisque() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bisque(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Black() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Black(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_BlanchedAlmond() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_BlanchedAlmond(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Blue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Blue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_BlueViolet() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_BlueViolet(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Brown() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Brown(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_BurlyWood() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_BurlyWood(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_CadetBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CadetBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Chartreuse() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Chartreuse(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Chocolate() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Chocolate(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Coral() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Coral(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_CornflowerBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CornflowerBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Cornsilk() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Cornsilk(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Crimson() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Crimson(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Cyan() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Cyan(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkCyan() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkCyan(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkGoldenrod() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGoldenrod(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkGray() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGray(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkKhaki() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkKhaki(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkMagenta() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkMagenta(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkOliveGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOliveGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkOrange() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOrange(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkOrchid() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOrchid(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkRed() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkRed(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkSalmon() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSalmon(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkSeaGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSeaGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkSlateBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSlateBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkSlateGray() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSlateGray(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkTurquoise() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkTurquoise(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DarkViolet() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkViolet(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DeepPink() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeepPink(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DeepSkyBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeepSkyBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DimGray() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DimGray(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_DodgerBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DodgerBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Firebrick() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Firebrick(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_FloralWhite() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FloralWhite(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_ForestGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ForestGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Fuchsia() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Fuchsia(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Gainsboro() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gainsboro(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_GhostWhite() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_GhostWhite(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Gold() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gold(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Goldenrod() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Goldenrod(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Gray() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gray(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Green() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Green(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_GreenYellow() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_GreenYellow(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Honeydew() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Honeydew(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_HotPink() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_HotPink(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_IndianRed() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IndianRed(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Indigo() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Indigo(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Ivory() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Ivory(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Khaki() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Khaki(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Lavender() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Lavender(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LavenderBlush() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LavenderBlush(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LawnGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LawnGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LemonChiffon() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LemonChiffon(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightCoral() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightCoral(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightCyan() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightCyan(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightGoldenrodYellow() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGoldenrodYellow(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightGray() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGray(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightPink() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightPink(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightSalmon() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSalmon(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightSeaGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSeaGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightSkyBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSkyBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightSlateGray() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSlateGray(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightSteelBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSteelBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LightYellow() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightYellow(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Lime() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Lime(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_LimeGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LimeGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Linen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Linen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Magenta() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Magenta(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Maroon() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Maroon(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumAquamarine() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumAquamarine(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumOrchid() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumOrchid(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumPurple() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumPurple(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumSeaGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSeaGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumSlateBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSlateBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumSpringGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSpringGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumTurquoise() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumTurquoise(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MediumVioletRed() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumVioletRed(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MidnightBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MidnightBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MintCream() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MintCream(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_MistyRose() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MistyRose(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Moccasin() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Moccasin(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_NavajoWhite() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NavajoWhite(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Navy() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Navy(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_OldLace() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OldLace(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Olive() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Olive(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_OliveDrab() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OliveDrab(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Orange() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orange(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_OrangeRed() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OrangeRed(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Orchid() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orchid(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_PaleGoldenrod() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleGoldenrod(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_PaleGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_PaleTurquoise() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleTurquoise(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_PaleVioletRed() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleVioletRed(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_PapayaWhip() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PapayaWhip(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_PeachPuff() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PeachPuff(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Peru() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Peru(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Pink() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Pink(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Plum() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Plum(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_PowderBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PowderBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Purple() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Purple(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Red() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Red(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_RosyBrown() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RosyBrown(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_RoyalBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RoyalBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SaddleBrown() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SaddleBrown(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Salmon() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Salmon(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SandyBrown() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SandyBrown(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SeaGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SeaGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SeaShell() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SeaShell(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Sienna() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Sienna(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Silver() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Silver(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SkyBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SkyBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SlateBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SlateBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SlateGray() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SlateGray(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Snow() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Snow(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SpringGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SpringGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_SteelBlue() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SteelBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Tan() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Tan(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Teal() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Teal(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Thistle() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Thistle(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Tomato() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Tomato(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Transparent() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Transparent(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Turquoise() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Turquoise(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Violet() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Violet(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Wheat() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Wheat(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_White() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_White(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_WhiteSmoke() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_WhiteSmoke(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_Yellow() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Yellow(pThis, &value))
            }
            return .from(abi: value)
        }

        public func get_YellowGreen() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_YellowGreen(pThis, &value))
            }
            return .from(abi: value)
        }

    }

}
extension __x_ABI_CMicrosoft_CUI_CDisplayId {
        public static func from(swift: WinAppSDK.DisplayId) -> __x_ABI_CMicrosoft_CUI_CDisplayId {
            .init(Value: swift.value)
        }
    }
    extension __x_ABI_CMicrosoft_CUI_CIconId {
        public static func from(swift: WinAppSDK.IconId) -> __x_ABI_CMicrosoft_CUI_CIconId {
            .init(Value: swift.value)
        }
    }
    extension __x_ABI_CMicrosoft_CUI_CWindowId {
        public static func from(swift: WinAppSDK.WindowId) -> __x_ABI_CMicrosoft_CUI_CWindowId {
            .init(Value: swift.value)
        }
    }
    // MARK - ClosableNotifierHandler
extension __ABI_Microsoft_UI {
    public class ClosableNotifierHandler: WindowsFoundation.IUnknown {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIClosableNotifierHandler }

        open func Invoke() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifierHandler.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis))
            }
        }

    }


    typealias ClosableNotifierHandlerWrapper = InterfaceWrapperBase<__IMPL_Microsoft_UI.ClosableNotifierHandlerBridge>
    internal static var ClosableNotifierHandlerVTable: __x_ABI_CMicrosoft_CUI_CIClosableNotifierHandlerVtbl = .init(
        QueryInterface: { ClosableNotifierHandlerWrapper.queryInterface($0, $1, $2) },
        AddRef: { ClosableNotifierHandlerWrapper.addRef($0) },
        Release: { ClosableNotifierHandlerWrapper.release($0) },
        Invoke: {
            do {
                guard let __unwrapped__instance = ClosableNotifierHandlerWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                try __unwrapped__instance()
                return S_OK
            } catch { return failWith(error: error) }
        }
    )
}
public extension WinRTDelegateBridge where CABI == __x_ABI_CMicrosoft_CUI_CIClosableNotifierHandler {
    static func makeAbi() -> CABI {
        let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Microsoft_UI.ClosableNotifierHandlerVTable) { $0 }
        return .init(lpVtbl:vtblPtr)
    }
}


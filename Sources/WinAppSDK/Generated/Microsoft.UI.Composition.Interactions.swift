// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactionbindingaxismodes)
public typealias InteractionBindingAxisModes = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionBindingAxisModes
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactionchainingmode)
public typealias InteractionChainingMode = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionChainingMode
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactionsourcemode)
public typealias InteractionSourceMode = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceMode
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactionsourceredirectionmode)
public typealias InteractionSourceRedirectionMode = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceRedirectionMode
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerclampingoption)
public typealias InteractionTrackerClampingOption = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionTrackerClampingOption
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerpositionupdateoption)
public typealias InteractionTrackerPositionUpdateOption = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionTrackerPositionUpdateOption
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsourceredirectionmode)
public typealias VisualInteractionSourceRedirectionMode = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CVisualInteractionSourceRedirectionMode
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositionconditionalvalue)
public final class CompositionConditionalValue : WinAppSDK.CompositionObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.ICompositionConditionalValue
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValue
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    private static let _ICompositionConditionalValueStatics: __ABI_Microsoft_UI_Composition_Interactions.ICompositionConditionalValueStatics = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.CompositionConditionalValue")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositionconditionalvalue.create)
    public static func create(_ compositor: WinAppSDK.Compositor!) throws -> CompositionConditionalValue! {
        return try _ICompositionConditionalValueStatics.Create(compositor)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositionconditionalvalue.condition)
    public var condition : WinAppSDK.ExpressionAnimation! {
        get { try! _default.get_Condition() }
        set { try! _default.put_Condition(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositionconditionalvalue.value)
    public var value : WinAppSDK.ExpressionAnimation! {
        get { try! _default.get_Value() }
        set { try! _default.put_Value(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositioninteractionsourcecollection)
public final class CompositionInteractionSourceCollection : WinAppSDK.CompositionObject, IIterable {
    public typealias T = AnyICompositionInteractionSource?
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.ICompositionInteractionSourceCollection
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSourceCollection
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    override public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositioninteractionsourcecollection.add)
    public func add(_ value: AnyICompositionInteractionSource!) throws {
        try _default.Add(value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositioninteractionsourcecollection.remove)
    public func remove(_ value: AnyICompositionInteractionSource!) throws {
        try _default.Remove(value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositioninteractionsourcecollection.removeall)
    public func removeAll() throws {
        try _default.RemoveAll()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositioninteractionsourcecollection.count)
    public var count : Int32 {
        get { try! _default.get_Count() }
    }

    private lazy var _IIterable: IIterableICompositionInteractionSource! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.compositioninteractionsourcecollection.first)
    public func first() -> WindowsFoundation.AnyIIterator<AnyICompositionInteractionSource?>? {
        try! _IIterable.First()
    }

    deinit {
        _default = nil
        _IIterable = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactionsourceconfiguration)
public final class InteractionSourceConfiguration : WinAppSDK.CompositionObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionSourceConfiguration
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactionsourceconfiguration.positionxsourcemode)
    public var positionXSourceMode : InteractionSourceRedirectionMode {
        get { try! _default.get_PositionXSourceMode() }
        set { try! _default.put_PositionXSourceMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactionsourceconfiguration.positionysourcemode)
    public var positionYSourceMode : InteractionSourceRedirectionMode {
        get { try! _default.get_PositionYSourceMode() }
        set { try! _default.put_PositionYSourceMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactionsourceconfiguration.scalesourcemode)
    public var scaleSourceMode : InteractionSourceRedirectionMode {
        get { try! _default.get_ScaleSourceMode() }
        set { try! _default.put_ScaleSourceMode(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker)
public final class InteractionTracker : WinAppSDK.CompositionObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTracker
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    private static let _IInteractionTrackerStatics: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerStatics = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.InteractionTracker")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.create)
    public static func create(_ compositor: WinAppSDK.Compositor!) throws -> InteractionTracker! {
        return try _IInteractionTrackerStatics.Create(compositor)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.createwithowner)
    public static func createWithOwner(_ compositor: WinAppSDK.Compositor!, _ owner: AnyIInteractionTrackerOwner!) throws -> InteractionTracker! {
        return try _IInteractionTrackerStatics.CreateWithOwner(compositor, owner)
    }

    private static let _IInteractionTrackerStatics2: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerStatics2 = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.InteractionTracker")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.setbindingmode)
    public static func setBindingMode(_ boundTracker1: InteractionTracker!, _ boundTracker2: InteractionTracker!, _ axisMode: InteractionBindingAxisModes) throws {
        try _IInteractionTrackerStatics2.SetBindingMode(boundTracker1, boundTracker2, axisMode)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.getbindingmode)
    public static func getBindingMode(_ boundTracker1: InteractionTracker!, _ boundTracker2: InteractionTracker!) throws -> InteractionBindingAxisModes {
        return try _IInteractionTrackerStatics2.GetBindingMode(boundTracker1, boundTracker2)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.adjustpositionxifgreaterthanthreshold)
    public func adjustPositionXIfGreaterThanThreshold(_ adjustment: Float, _ positionThreshold: Float) throws {
        try _default.AdjustPositionXIfGreaterThanThreshold(adjustment, positionThreshold)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.adjustpositionyifgreaterthanthreshold)
    public func adjustPositionYIfGreaterThanThreshold(_ adjustment: Float, _ positionThreshold: Float) throws {
        try _default.AdjustPositionYIfGreaterThanThreshold(adjustment, positionThreshold)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.configurepositionxinertiamodifiers)
    public func configurePositionXInertiaModifiers(_ modifiers: WindowsFoundation.AnyIIterable<InteractionTrackerInertiaModifier?>!) throws {
        try _default.ConfigurePositionXInertiaModifiers(modifiers)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.configurepositionyinertiamodifiers)
    public func configurePositionYInertiaModifiers(_ modifiers: WindowsFoundation.AnyIIterable<InteractionTrackerInertiaModifier?>!) throws {
        try _default.ConfigurePositionYInertiaModifiers(modifiers)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.configurescaleinertiamodifiers)
    public func configureScaleInertiaModifiers(_ modifiers: WindowsFoundation.AnyIIterable<InteractionTrackerInertiaModifier?>!) throws {
        try _default.ConfigureScaleInertiaModifiers(modifiers)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdateposition)
    public func tryUpdatePosition(_ value: WindowsFoundation.Vector3) throws -> Int32 {
        try _default.TryUpdatePosition(value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdatepositionby)
    public func tryUpdatePositionBy(_ amount: WindowsFoundation.Vector3) throws -> Int32 {
        try _default.TryUpdatePositionBy(amount)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdatepositionwithanimation)
    public func tryUpdatePositionWithAnimation(_ animation: WinAppSDK.CompositionAnimation!) throws -> Int32 {
        try _default.TryUpdatePositionWithAnimation(animation)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdatepositionwithadditionalvelocity)
    public func tryUpdatePositionWithAdditionalVelocity(_ velocityInPixelsPerSecond: WindowsFoundation.Vector3) throws -> Int32 {
        try _default.TryUpdatePositionWithAdditionalVelocity(velocityInPixelsPerSecond)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdatescale)
    public func tryUpdateScale(_ value: Float, _ centerPoint: WindowsFoundation.Vector3) throws -> Int32 {
        try _default.TryUpdateScale(value, centerPoint)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdatescalewithanimation)
    public func tryUpdateScaleWithAnimation(_ animation: WinAppSDK.CompositionAnimation!, _ centerPoint: WindowsFoundation.Vector3) throws -> Int32 {
        try _default.TryUpdateScaleWithAnimation(animation, centerPoint)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdatescalewithadditionalvelocity)
    public func tryUpdateScaleWithAdditionalVelocity(_ velocityInPercentPerSecond: Float, _ centerPoint: WindowsFoundation.Vector3) throws -> Int32 {
        try _default.TryUpdateScaleWithAdditionalVelocity(velocityInPercentPerSecond, centerPoint)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.interactionsources)
    public var interactionSources : CompositionInteractionSourceCollection! {
        get { try! _default.get_InteractionSources() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.ispositionroundingsuggested)
    public var isPositionRoundingSuggested : Bool {
        get { try! _default.get_IsPositionRoundingSuggested() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.maxposition)
    public var maxPosition : WindowsFoundation.Vector3 {
        get { try! _default.get_MaxPosition() }
        set { try! _default.put_MaxPosition(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.maxscale)
    public var maxScale : Float {
        get { try! _default.get_MaxScale() }
        set { try! _default.put_MaxScale(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.minposition)
    public var minPosition : WindowsFoundation.Vector3 {
        get { try! _default.get_MinPosition() }
        set { try! _default.put_MinPosition(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.minscale)
    public var minScale : Float {
        get { try! _default.get_MinScale() }
        set { try! _default.put_MinScale(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.naturalrestingposition)
    public var naturalRestingPosition : WindowsFoundation.Vector3 {
        get { try! _default.get_NaturalRestingPosition() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.naturalrestingscale)
    public var naturalRestingScale : Float {
        get { try! _default.get_NaturalRestingScale() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.owner)
    public var owner : AnyIInteractionTrackerOwner! {
        get { try! _default.get_Owner() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.position)
    public var position : WindowsFoundation.Vector3 {
        get { try! _default.get_Position() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.positioninertiadecayrate)
    public var positionInertiaDecayRate : WindowsFoundation.Vector3? {
        get { try! _default.get_PositionInertiaDecayRate() }
        set { try! _default.put_PositionInertiaDecayRate(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.positionvelocityinpixelspersecond)
    public var positionVelocityInPixelsPerSecond : WindowsFoundation.Vector3 {
        get { try! _default.get_PositionVelocityInPixelsPerSecond() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.scale)
    public var scale : Float {
        get { try! _default.get_Scale() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.scaleinertiadecayrate)
    public var scaleInertiaDecayRate : Float? {
        get { try! _default.get_ScaleInertiaDecayRate() }
        set { try! _default.put_ScaleInertiaDecayRate(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.scalevelocityinpercentpersecond)
    public var scaleVelocityInPercentPerSecond : Float {
        get { try! _default.get_ScaleVelocityInPercentPerSecond() }
    }

    private lazy var _IInteractionTracker2: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTracker2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.configurecenterpointxinertiamodifiers)
    public func configureCenterPointXInertiaModifiers(_ conditionalValues: WindowsFoundation.AnyIIterable<CompositionConditionalValue?>!) throws {
        try _IInteractionTracker2.ConfigureCenterPointXInertiaModifiers(conditionalValues)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.configurecenterpointyinertiamodifiers)
    public func configureCenterPointYInertiaModifiers(_ conditionalValues: WindowsFoundation.AnyIIterable<CompositionConditionalValue?>!) throws {
        try _IInteractionTracker2.ConfigureCenterPointYInertiaModifiers(conditionalValues)
    }

    private lazy var _IInteractionTracker3: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTracker3! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.configurevector2positioninertiamodifiers)
    public func configureVector2PositionInertiaModifiers(_ modifiers: WindowsFoundation.AnyIIterable<InteractionTrackerVector2InertiaModifier?>!) throws {
        try _IInteractionTracker3.ConfigureVector2PositionInertiaModifiers(modifiers)
    }

    private lazy var _IInteractionTracker4: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTracker4! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdateposition)
    public func tryUpdatePosition(_ value: WindowsFoundation.Vector3, _ option: InteractionTrackerClampingOption) throws -> Int32 {
        try _IInteractionTracker4.TryUpdatePositionWithOption(value, option)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdatepositionby)
    public func tryUpdatePositionBy(_ amount: WindowsFoundation.Vector3, _ option: InteractionTrackerClampingOption) throws -> Int32 {
        try _IInteractionTracker4.TryUpdatePositionByWithOption(amount, option)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.isinertiafromimpulse)
    public var isInertiaFromImpulse : Bool {
        get { try! _IInteractionTracker4.get_IsInertiaFromImpulse() }
    }

    private lazy var _IInteractionTracker5: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTracker5! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontracker.tryupdateposition)
    public func tryUpdatePosition(_ value: WindowsFoundation.Vector3, _ option: InteractionTrackerClampingOption, _ posUpdateOption: InteractionTrackerPositionUpdateOption) throws -> Int32 {
        try _IInteractionTracker5.TryUpdatePositionWithOption(value, option, posUpdateOption)
    }

    deinit {
        _default = nil
        _IInteractionTracker2 = nil
        _IInteractionTracker3 = nil
        _IInteractionTracker4 = nil
        _IInteractionTracker5 = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackercustomanimationstateenteredargs)
public final class InteractionTrackerCustomAnimationStateEnteredArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerCustomAnimationStateEnteredArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerCustomAnimationStateEnteredArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackercustomanimationstateenteredargs.requestid)
    public var requestId : Int32 {
        get { try! _default.get_RequestId() }
    }

    private lazy var _IInteractionTrackerCustomAnimationStateEnteredArgs2: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerCustomAnimationStateEnteredArgs2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackercustomanimationstateenteredargs.isfrombinding)
    public var isFromBinding : Bool {
        get { try! _IInteractionTrackerCustomAnimationStateEnteredArgs2.get_IsFromBinding() }
    }

    deinit {
        _default = nil
        _IInteractionTrackerCustomAnimationStateEnteredArgs2 = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackeridlestateenteredargs)
public final class InteractionTrackerIdleStateEnteredArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerIdleStateEnteredArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerIdleStateEnteredArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackeridlestateenteredargs.requestid)
    public var requestId : Int32 {
        get { try! _default.get_RequestId() }
    }

    private lazy var _IInteractionTrackerIdleStateEnteredArgs2: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerIdleStateEnteredArgs2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackeridlestateenteredargs.isfrombinding)
    public var isFromBinding : Bool {
        get { try! _IInteractionTrackerIdleStateEnteredArgs2.get_IsFromBinding() }
    }

    deinit {
        _default = nil
        _IInteractionTrackerIdleStateEnteredArgs2 = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiamodifier)
open class InteractionTrackerInertiaModifier : WinAppSDK.CompositionObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaModifier
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaModifier
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override open func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    @_spi(WinRTInternal)
    override public init<Composable: ComposableImpl>(
        composing: Composable.Type,
        _ createCallback: (UnsealedWinRTClassWrapper<Composable>?, inout WindowsFoundation.IInspectable?) -> Composable.Default.SwiftABI)
    {
        super.init(composing: composing, createCallback)
    }
    override open func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static var _IInteractionTrackerInertiaModifierFactory : __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaModifierFactory =  try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier")

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiamotion)
public final class InteractionTrackerInertiaMotion : WinAppSDK.InteractionTrackerInertiaModifier {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaMotion
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotion
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    private static let _IInteractionTrackerInertiaMotionStatics: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaMotionStatics = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiamotion.create)
    public static func create(_ compositor: WinAppSDK.Compositor!) throws -> InteractionTrackerInertiaMotion! {
        return try _IInteractionTrackerInertiaMotionStatics.Create(compositor)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiamotion.condition)
    public var condition : WinAppSDK.ExpressionAnimation! {
        get { try! _default.get_Condition() }
        set { try! _default.put_Condition(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiamotion.motion)
    public var motion : WinAppSDK.ExpressionAnimation! {
        get { try! _default.get_Motion() }
        set { try! _default.put_Motion(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertianaturalmotion)
public final class InteractionTrackerInertiaNaturalMotion : WinAppSDK.InteractionTrackerInertiaModifier {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaNaturalMotion
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotion
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    private static let _IInteractionTrackerInertiaNaturalMotionStatics: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaNaturalMotionStatics = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertianaturalmotion.create)
    public static func create(_ compositor: WinAppSDK.Compositor!) throws -> InteractionTrackerInertiaNaturalMotion! {
        return try _IInteractionTrackerInertiaNaturalMotionStatics.Create(compositor)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertianaturalmotion.condition)
    public var condition : WinAppSDK.ExpressionAnimation! {
        get { try! _default.get_Condition() }
        set { try! _default.put_Condition(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertianaturalmotion.naturalmotion)
    public var naturalMotion : WinAppSDK.ScalarNaturalMotionAnimation! {
        get { try! _default.get_NaturalMotion() }
        set { try! _default.put_NaturalMotion(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiarestingvalue)
public final class InteractionTrackerInertiaRestingValue : WinAppSDK.InteractionTrackerInertiaModifier {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaRestingValue
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValue
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    private static let _IInteractionTrackerInertiaRestingValueStatics: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaRestingValueStatics = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiarestingvalue.create)
    public static func create(_ compositor: WinAppSDK.Compositor!) throws -> InteractionTrackerInertiaRestingValue! {
        return try _IInteractionTrackerInertiaRestingValueStatics.Create(compositor)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiarestingvalue.condition)
    public var condition : WinAppSDK.ExpressionAnimation! {
        get { try! _default.get_Condition() }
        set { try! _default.put_Condition(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiarestingvalue.restingvalue)
    public var restingValue : WinAppSDK.ExpressionAnimation! {
        get { try! _default.get_RestingValue() }
        set { try! _default.put_RestingValue(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs)
public final class InteractionTrackerInertiaStateEnteredArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaStateEnteredArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.modifiedrestingposition)
    public var modifiedRestingPosition : WindowsFoundation.Vector3? {
        get { try! _default.get_ModifiedRestingPosition() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.modifiedrestingscale)
    public var modifiedRestingScale : Float? {
        get { try! _default.get_ModifiedRestingScale() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.naturalrestingposition)
    public var naturalRestingPosition : WindowsFoundation.Vector3 {
        get { try! _default.get_NaturalRestingPosition() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.naturalrestingscale)
    public var naturalRestingScale : Float {
        get { try! _default.get_NaturalRestingScale() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.positionvelocityinpixelspersecond)
    public var positionVelocityInPixelsPerSecond : WindowsFoundation.Vector3 {
        get { try! _default.get_PositionVelocityInPixelsPerSecond() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.requestid)
    public var requestId : Int32 {
        get { try! _default.get_RequestId() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.scalevelocityinpercentpersecond)
    public var scaleVelocityInPercentPerSecond : Float {
        get { try! _default.get_ScaleVelocityInPercentPerSecond() }
    }

    private lazy var _IInteractionTrackerInertiaStateEnteredArgs2: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaStateEnteredArgs2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.isinertiafromimpulse)
    public var isInertiaFromImpulse : Bool {
        get { try! _IInteractionTrackerInertiaStateEnteredArgs2.get_IsInertiaFromImpulse() }
    }

    private lazy var _IInteractionTrackerInertiaStateEnteredArgs3: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInertiaStateEnteredArgs3! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinertiastateenteredargs.isfrombinding)
    public var isFromBinding : Bool {
        get { try! _IInteractionTrackerInertiaStateEnteredArgs3.get_IsFromBinding() }
    }

    deinit {
        _default = nil
        _IInteractionTrackerInertiaStateEnteredArgs2 = nil
        _IInteractionTrackerInertiaStateEnteredArgs3 = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinteractingstateenteredargs)
public final class InteractionTrackerInteractingStateEnteredArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInteractingStateEnteredArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInteractingStateEnteredArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinteractingstateenteredargs.requestid)
    public var requestId : Int32 {
        get { try! _default.get_RequestId() }
    }

    private lazy var _IInteractionTrackerInteractingStateEnteredArgs2: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerInteractingStateEnteredArgs2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerinteractingstateenteredargs.isfrombinding)
    public var isFromBinding : Bool {
        get { try! _IInteractionTrackerInteractingStateEnteredArgs2.get_IsFromBinding() }
    }

    deinit {
        _default = nil
        _IInteractionTrackerInteractingStateEnteredArgs2 = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerrequestignoredargs)
public final class InteractionTrackerRequestIgnoredArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerRequestIgnoredArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerRequestIgnoredArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackerrequestignoredargs.requestid)
    public var requestId : Int32 {
        get { try! _default.get_RequestId() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervalueschangedargs)
public final class InteractionTrackerValuesChangedArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerValuesChangedArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerValuesChangedArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervalueschangedargs.position)
    public var position : WindowsFoundation.Vector3 {
        get { try! _default.get_Position() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervalueschangedargs.requestid)
    public var requestId : Int32 {
        get { try! _default.get_RequestId() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervalueschangedargs.scale)
    public var scale : Float {
        get { try! _default.get_Scale() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervector2inertiamodifier)
open class InteractionTrackerVector2InertiaModifier : WinAppSDK.CompositionObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerVector2InertiaModifier
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaModifier
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override open func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    @_spi(WinRTInternal)
    override public init<Composable: ComposableImpl>(
        composing: Composable.Type,
        _ createCallback: (UnsealedWinRTClassWrapper<Composable>?, inout WindowsFoundation.IInspectable?) -> Composable.Default.SwiftABI)
    {
        super.init(composing: composing, createCallback)
    }
    override open func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static var _IInteractionTrackerVector2InertiaModifierFactory : __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerVector2InertiaModifierFactory =  try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier")

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervector2inertianaturalmotion)
public final class InteractionTrackerVector2InertiaNaturalMotion : WinAppSDK.InteractionTrackerVector2InertiaModifier {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerVector2InertiaNaturalMotion
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotion
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    private static let _IInteractionTrackerVector2InertiaNaturalMotionStatics: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerVector2InertiaNaturalMotionStatics = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervector2inertianaturalmotion.create)
    public static func create(_ compositor: WinAppSDK.Compositor!) throws -> InteractionTrackerVector2InertiaNaturalMotion! {
        return try _IInteractionTrackerVector2InertiaNaturalMotionStatics.Create(compositor)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervector2inertianaturalmotion.condition)
    public var condition : WinAppSDK.ExpressionAnimation! {
        get { try! _default.get_Condition() }
        set { try! _default.put_Condition(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.interactiontrackervector2inertianaturalmotion.naturalmotion)
    public var naturalMotion : WinAppSDK.Vector2NaturalMotionAnimation! {
        get { try! _default.get_NaturalMotion() }
        set { try! _default.put_NaturalMotion(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource)
open class VisualInteractionSource : WinAppSDK.CompositionObject, ICompositionInteractionSource {
    private typealias SwiftABI = __ABI_Microsoft_UI_Composition_Interactions.IVisualInteractionSource
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override open func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    @_spi(WinRTInternal)
    override public init<Composable: ComposableImpl>(
        composing: Composable.Type,
        _ createCallback: (UnsealedWinRTClassWrapper<Composable>?, inout WindowsFoundation.IInspectable?) -> Composable.Default.SwiftABI)
    {
        super.init(composing: composing, createCallback)
    }
    override open func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static var _IVisualInteractionSourceObjectFactory : __ABI_Microsoft_UI_Composition_Interactions.IVisualInteractionSourceObjectFactory =  try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.VisualInteractionSource")

    private static let _IVisualInteractionSourceStatics: __ABI_Microsoft_UI_Composition_Interactions.IVisualInteractionSourceStatics = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.VisualInteractionSource")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.create)
    public class func create(_ source: WinAppSDK.Visual!) throws -> VisualInteractionSource! {
        return try _IVisualInteractionSourceStatics.Create(source)
    }

    private static let _IVisualInteractionSourceStatics2: __ABI_Microsoft_UI_Composition_Interactions.IVisualInteractionSourceStatics2 = try! RoGetActivationFactory("Microsoft.UI.Composition.Interactions.VisualInteractionSource")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.createfromivisualelement)
    public class func createFromIVisualElement(_ source: WinAppSDK.AnyIVisualElement!) throws -> VisualInteractionSource! {
        return try _IVisualInteractionSourceStatics2.CreateFromIVisualElement(source)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.tryredirectformanipulation)
    public func tryRedirectForManipulation(_ pointerPoint: WinAppSDK.PointerPoint!) throws {
        try _default.TryRedirectForManipulation(pointerPoint)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.ispositionxrailsenabled)
    public var isPositionXRailsEnabled : Bool {
        get { try! _default.get_IsPositionXRailsEnabled() }
        set { try! _default.put_IsPositionXRailsEnabled(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.ispositionyrailsenabled)
    public var isPositionYRailsEnabled : Bool {
        get { try! _default.get_IsPositionYRailsEnabled() }
        set { try! _default.put_IsPositionYRailsEnabled(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.manipulationredirectionmode)
    public var manipulationRedirectionMode : VisualInteractionSourceRedirectionMode {
        get { try! _default.get_ManipulationRedirectionMode() }
        set { try! _default.put_ManipulationRedirectionMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.positionxchainingmode)
    public var positionXChainingMode : InteractionChainingMode {
        get { try! _default.get_PositionXChainingMode() }
        set { try! _default.put_PositionXChainingMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.positionxsourcemode)
    public var positionXSourceMode : InteractionSourceMode {
        get { try! _default.get_PositionXSourceMode() }
        set { try! _default.put_PositionXSourceMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.positionychainingmode)
    public var positionYChainingMode : InteractionChainingMode {
        get { try! _default.get_PositionYChainingMode() }
        set { try! _default.put_PositionYChainingMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.positionysourcemode)
    public var positionYSourceMode : InteractionSourceMode {
        get { try! _default.get_PositionYSourceMode() }
        set { try! _default.put_PositionYSourceMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.scalechainingmode)
    public var scaleChainingMode : InteractionChainingMode {
        get { try! _default.get_ScaleChainingMode() }
        set { try! _default.put_ScaleChainingMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.scalesourcemode)
    public var scaleSourceMode : InteractionSourceMode {
        get { try! _default.get_ScaleSourceMode() }
        set { try! _default.put_ScaleSourceMode(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.source)
    public var source : WinAppSDK.Visual! {
        get { try! _default.get_Source() }
    }

    private lazy var _IVisualInteractionSource2: __ABI_Microsoft_UI_Composition_Interactions.IVisualInteractionSource2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.configurecenterpointxmodifiers)
    public func configureCenterPointXModifiers(_ conditionalValues: WindowsFoundation.AnyIIterable<CompositionConditionalValue?>!) throws {
        try _IVisualInteractionSource2.ConfigureCenterPointXModifiers(conditionalValues)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.configurecenterpointymodifiers)
    public func configureCenterPointYModifiers(_ conditionalValues: WindowsFoundation.AnyIIterable<CompositionConditionalValue?>!) throws {
        try _IVisualInteractionSource2.ConfigureCenterPointYModifiers(conditionalValues)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.configuredeltapositionxmodifiers)
    public func configureDeltaPositionXModifiers(_ conditionalValues: WindowsFoundation.AnyIIterable<CompositionConditionalValue?>!) throws {
        try _IVisualInteractionSource2.ConfigureDeltaPositionXModifiers(conditionalValues)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.configuredeltapositionymodifiers)
    public func configureDeltaPositionYModifiers(_ conditionalValues: WindowsFoundation.AnyIIterable<CompositionConditionalValue?>!) throws {
        try _IVisualInteractionSource2.ConfigureDeltaPositionYModifiers(conditionalValues)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.configuredeltascalemodifiers)
    public func configureDeltaScaleModifiers(_ conditionalValues: WindowsFoundation.AnyIIterable<CompositionConditionalValue?>!) throws {
        try _IVisualInteractionSource2.ConfigureDeltaScaleModifiers(conditionalValues)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.deltaposition)
    public var deltaPosition : WindowsFoundation.Vector3 {
        get { try! _IVisualInteractionSource2.get_DeltaPosition() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.deltascale)
    public var deltaScale : Float {
        get { try! _IVisualInteractionSource2.get_DeltaScale() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.position)
    public var position : WindowsFoundation.Vector3 {
        get { try! _IVisualInteractionSource2.get_Position() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.positionvelocity)
    public var positionVelocity : WindowsFoundation.Vector3 {
        get { try! _IVisualInteractionSource2.get_PositionVelocity() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.scale)
    public var scale : Float {
        get { try! _IVisualInteractionSource2.get_Scale() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.scalevelocity)
    public var scaleVelocity : Float {
        get { try! _IVisualInteractionSource2.get_ScaleVelocity() }
    }

    private lazy var _IVisualInteractionSource3: __ABI_Microsoft_UI_Composition_Interactions.IVisualInteractionSource3! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.visualinteractionsource.pointerwheelconfig)
    public var pointerWheelConfig : InteractionSourceConfiguration! {
        get { try! _IVisualInteractionSource3.get_PointerWheelConfig() }
    }

    private lazy var _ICompositionInteractionSource: __ABI_Microsoft_UI_Composition_Interactions.ICompositionInteractionSource! = getInterfaceForCaching()
    deinit {
        _default = nil
        _IVisualInteractionSource2 = nil
        _IVisualInteractionSource3 = nil
        _ICompositionInteractionSource = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.icompositioninteractionsource)
public protocol ICompositionInteractionSource : WinRTInterface {
}

extension ICompositionInteractionSource {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI_Composition_Interactions.ICompositionInteractionSourceWrapper.IID:
                let wrapper = __ABI_Microsoft_UI_Composition_Interactions.ICompositionInteractionSourceWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyICompositionInteractionSource = any ICompositionInteractionSource

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.iinteractiontrackerowner)
public protocol IInteractionTrackerOwner : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.iinteractiontrackerowner.customanimationstateentered)
    func customAnimationStateEntered(_ sender: WinAppSDK.InteractionTracker!, _ args: WinAppSDK.InteractionTrackerCustomAnimationStateEnteredArgs!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.iinteractiontrackerowner.idlestateentered)
    func idleStateEntered(_ sender: WinAppSDK.InteractionTracker!, _ args: WinAppSDK.InteractionTrackerIdleStateEnteredArgs!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.iinteractiontrackerowner.inertiastateentered)
    func inertiaStateEntered(_ sender: WinAppSDK.InteractionTracker!, _ args: WinAppSDK.InteractionTrackerInertiaStateEnteredArgs!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.iinteractiontrackerowner.interactingstateentered)
    func interactingStateEntered(_ sender: WinAppSDK.InteractionTracker!, _ args: WinAppSDK.InteractionTrackerInteractingStateEnteredArgs!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.iinteractiontrackerowner.requestignored)
    func requestIgnored(_ sender: WinAppSDK.InteractionTracker!, _ args: WinAppSDK.InteractionTrackerRequestIgnoredArgs!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.composition.interactions.iinteractiontrackerowner.valueschanged)
    func valuesChanged(_ sender: WinAppSDK.InteractionTracker!, _ args: WinAppSDK.InteractionTrackerValuesChangedArgs!) throws
}

extension IInteractionTrackerOwner {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerOwnerWrapper.IID:
                let wrapper = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerOwnerWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIInteractionTrackerOwner = any IInteractionTrackerOwner

extension WinAppSDK.InteractionBindingAxisModes {
    public static var none : WinAppSDK.InteractionBindingAxisModes {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionBindingAxisModes_None
    }
    public static var positionX : WinAppSDK.InteractionBindingAxisModes {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionBindingAxisModes_PositionX
    }
    public static var positionY : WinAppSDK.InteractionBindingAxisModes {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionBindingAxisModes_PositionY
    }
    public static var scale : WinAppSDK.InteractionBindingAxisModes {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionBindingAxisModes_Scale
    }
}
extension WinAppSDK.InteractionBindingAxisModes: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension WinAppSDK.InteractionChainingMode {
    public static var auto : WinAppSDK.InteractionChainingMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionChainingMode_Auto
    }
    public static var always : WinAppSDK.InteractionChainingMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionChainingMode_Always
    }
    public static var never : WinAppSDK.InteractionChainingMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionChainingMode_Never
    }
}
extension WinAppSDK.InteractionChainingMode: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension WinAppSDK.InteractionSourceMode {
    public static var disabled : WinAppSDK.InteractionSourceMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceMode_Disabled
    }
    public static var enabledWithInertia : WinAppSDK.InteractionSourceMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceMode_EnabledWithInertia
    }
    public static var enabledWithoutInertia : WinAppSDK.InteractionSourceMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceMode_EnabledWithoutInertia
    }
}
extension WinAppSDK.InteractionSourceMode: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension WinAppSDK.InteractionSourceRedirectionMode {
    public static var disabled : WinAppSDK.InteractionSourceRedirectionMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceRedirectionMode_Disabled
    }
    public static var enabled : WinAppSDK.InteractionSourceRedirectionMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceRedirectionMode_Enabled
    }
}
extension WinAppSDK.InteractionSourceRedirectionMode: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension WinAppSDK.InteractionTrackerClampingOption {
    public static var auto : WinAppSDK.InteractionTrackerClampingOption {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionTrackerClampingOption_Auto
    }
    public static var disabled : WinAppSDK.InteractionTrackerClampingOption {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionTrackerClampingOption_Disabled
    }
}
extension WinAppSDK.InteractionTrackerClampingOption: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension WinAppSDK.InteractionTrackerPositionUpdateOption {
    public static var `default` : WinAppSDK.InteractionTrackerPositionUpdateOption {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionTrackerPositionUpdateOption_Default
    }
    public static var allowActiveCustomScaleAnimation : WinAppSDK.InteractionTrackerPositionUpdateOption {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionTrackerPositionUpdateOption_AllowActiveCustomScaleAnimation
    }
}
extension WinAppSDK.InteractionTrackerPositionUpdateOption: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

extension WinAppSDK.VisualInteractionSourceRedirectionMode {
    public static var off : WinAppSDK.VisualInteractionSourceRedirectionMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CVisualInteractionSourceRedirectionMode_Off
    }
    public static var capableTouchpadOnly : WinAppSDK.VisualInteractionSourceRedirectionMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CVisualInteractionSourceRedirectionMode_CapableTouchpadOnly
    }
    public static var pointerWheelOnly : WinAppSDK.VisualInteractionSourceRedirectionMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CVisualInteractionSourceRedirectionMode_PointerWheelOnly
    }
    public static var capableTouchpadAndPointerWheel : WinAppSDK.VisualInteractionSourceRedirectionMode {
        __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CVisualInteractionSourceRedirectionMode_CapableTouchpadAndPointerWheel
    }
}
extension WinAppSDK.VisualInteractionSourceRedirectionMode: @retroactive Hashable, @retroactive Codable, @retroactive @unchecked Sendable {}

